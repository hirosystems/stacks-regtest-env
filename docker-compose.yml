version: "3.9"

x-common-vars:
  - &STACKS_BLOCKCHAIN_COMMIT fe314a0b6650ecfa138e15c7ed4014fa829037ef
  - &BTC_ADDR miEJtNKa3ASpA19v5ZhvbKTEieYjLpzCYT
  - &MINER_SEED 9e446f6b0c6a96cf2190e54bcd5a8569c3e386f091605499464389b8d4e0bfc201 # stx: STEW4ZNT093ZHK4NEQKX8QJGM2Y7WWJ2FQQS5C19, btc: miEJtNKa3ASpA19v5ZhvbKTEieYjLpzCYT, pub_key: 035379aa40c02890d253cfa577964116eb5295570ae9f7287cbae5f2585f5b2c7c, wif: cStMQXkK5yTFGP3KbNXYQ3sJf2qwQiKrZwR9QJnksp32eKzef1za
  - &BITCOIN_PEER_PORT 18444
  - &BITCOIN_RPC_PORT 18443
  - &BITCOIN_RPC_USER btc
  - &BITCOIN_RPC_PASS btc
  - &MINE_INTERVAL ${MINE_INTERVAL:-0.5s}
  - &STACKS_20_HEIGHT ${STACKS_20_HEIGHT:-104}
  - &STACKS_2_05_HEIGHT ${STACKS_2_05_HEIGHT:-105}
  - &STACKS_21_HEIGHT ${STACKS_21_HEIGHT:-106}
  - &STACKS_POX2_HEIGHT ${STACKS_POX2_HEIGHT:-106} # 104 is is stacks_block=1, 106 is stacks_block=3
  - &REWARD_RECIPIENT ${REWARD_RECIPIENT:-STQM73RQC4EX0A07KWG1J5ECZJYBZS4SJ4ERC6WN} # priv: 6ad9cadb42d4edbfbe0c5bfb3b8a4125ddced021c4174f829b714ccbf527f02001

services:

  snapshot-init:
    profiles: ["snapshot-init"]
    build:
      context: .
      dockerfile: Dockerfile.stacks-node
      args:
        GIT_COMMIT: *STACKS_BLOCKCHAIN_COMMIT
    volumes:
      - ./bitcoin.conf:/root/.bitcoin/bitcoin.conf
      - ./stacks-krypton-miner.toml/:/root/config.toml.in
      - ./init-data:/init-data
      - chainstate:/chainstate
    environment:
      DATA_DIR: /chainstate/stacks-blockchain-data
      BITCOIN_PEER_HOST: localhost
      BITCOIN_PEER_PORT: *BITCOIN_PEER_PORT
      BITCOIN_RPC_PORT: *BITCOIN_RPC_PORT
      BITCOIN_RPC_USER: *BITCOIN_RPC_USER
      BITCOIN_RPC_PASS: *BITCOIN_RPC_PASS
      MINER_SEED: *MINER_SEED
      BTC_ADDR: *BTC_ADDR
      INIT_BLOCKS: 101
      STACKS_21_HEIGHT: *STACKS_21_HEIGHT
      STACKS_POX2_HEIGHT: *STACKS_POX2_HEIGHT
      REWARD_RECIPIENT: *REWARD_RECIPIENT
    entrypoint:
      - /bin/bash
      - -c
      - |
        set -e
        if [[ ! -z "$${REWARD_RECIPIENT}" ]]; then
          export REWARD_RECIPIENT_CONF="block_reward_recipient = \"$$REWARD_RECIPIENT\""
        fi
        rm -rf /chainstate/bitcoin-data/*
        mkdir -p /chainstate/bitcoin-data
        bitcoind &
        BTCD_PID=$$!
        bitcoin-cli -rpcwait getmininginfo
        bitcoin-cli createwallet ""
        bitcoin-cli importaddress $$BTC_ADDR "" false
        bitcoin-cli generatetoaddress $$INIT_BLOCKS $$BTC_ADDR

        rm -rf /chainstate/stacks-blockchain-data/*
        envsubst < config.toml.in > config.toml
        stacks-node start --config=config.toml &
        STACKS_PID=$$!

        while true; do
          HEIGHT=$$(curl -s localhost:20443/v2/info | jq '.burn_block_height')
          if [ "$$HEIGHT" = "$$INIT_BLOCKS" ]; then
            echo "Stacks node caught up to block $$INIT_BLOCKS"
            break
          else
            echo "Stacks node not ready, at block: $$HEIGHT"
          fi
          sleep 0.5s
        done

        kill $$STACKS_PID
        wait $$STACKS_PID

        bitcoin-cli stop
        wait $$BTCD_PID

        tar -C /chainstate/bitcoin-data -czf /init-data/bitcoind.tar.gz ./
        tar -C /chainstate/stacks-blockchain-data -czf /init-data/stacks-blockchain-data.tar.gz ./

  bitcoind:
    build:
      context: .
      dockerfile: Dockerfile.btc
    depends_on:
      - stacks-api
    ports:
      - "18443:18443"
      - "18444:18444"
    volumes:
      - ./bitcoin.conf:/root/.bitcoin/bitcoin.conf
      - ./init-data:/init-data
      - chainstate:/chainstate
    entrypoint:
      - /bin/bash
      - -c
      - |
        set -e
        mkdir -p /chainstate/bitcoin-data
        if [ -z "$$(ls -A /chainstate/bitcoin-data)" ]; then
          tar -xf /init-data/bitcoind.tar.gz -C /chainstate/bitcoin-data
        fi
        bitcoind

  bitcoind-miner:
    build:
      context: .
      dockerfile: Dockerfile.btc
    depends_on:
      - stacks-node
    volumes:
      - ./bitcoind-miner.sh:/usr/bin/bitcoind-miner.sh
      - ./bitcoin.conf:/root/.bitcoin/bitcoin.conf
    environment:
      BTC_ADDR: *BTC_ADDR
      MINE_INTERVAL: *MINE_INTERVAL
    entrypoint:
      - /bin/bash
      - -c
      - |
        set -e
        trap "exit" INT TERM
        trap "kill 0" EXIT
        bitcoin-cli -rpcwait -rpcconnect=bitcoind getmininginfo
        bitcoin-cli -rpcconnect=bitcoind generatetoaddress 1 $$BTC_ADDR
        while true; do
          TX=$$(bitcoin-cli -rpcconnect=bitcoind listtransactions '*' 1 0 true)
          CONFS=$$(echo "$$TX" | jq '.[].confirmations')
          if [ "$$CONFS" = "0" ]; then
            echo "Detected Stacks mining mempool tx, mining btc block..."
            bitcoin-cli -rpcconnect=bitcoind generatetoaddress 1 "$$BTC_ADDR"
          else
            echo "No Stacks mining tx detected"
          fi
          sleep $$MINE_INTERVAL &
          wait || exit 0
        done

  stacks-node:
    build:
      context: .
      dockerfile: Dockerfile.stacks-node
      args:
        GIT_COMMIT: *STACKS_BLOCKCHAIN_COMMIT
    depends_on:
      - bitcoind
    ports:
      - "20443:20443"
    volumes:
      - ./stacks-krypton-miner.toml/:/root/config.toml.in
      - ./bitcoin.conf:/root/.bitcoin/bitcoin.conf
      - ./init-data:/init-data
      - chainstate:/chainstate
    environment:
      # STACKS_LOG_TRACE: 1 # uncomment for trace logging
      # STACKS_LOG_DEBUG: 1
      DATA_DIR: /chainstate/stacks-blockchain-data
      STACKS_EVENT_OBSERVER: stacks-api:3700
      BITCOIN_PEER_HOST: bitcoind
      BITCOIN_PEER_PORT: *BITCOIN_PEER_PORT
      BITCOIN_RPC_PORT: *BITCOIN_RPC_PORT
      BITCOIN_RPC_USER: *BITCOIN_RPC_USER
      BITCOIN_RPC_PASS: *BITCOIN_RPC_PASS
      MINER_SEED: *MINER_SEED
      STACKS_21_HEIGHT: *STACKS_21_HEIGHT
      STACKS_POX2_HEIGHT: *STACKS_POX2_HEIGHT
      REWARD_RECIPIENT: *REWARD_RECIPIENT
    entrypoint:
      - /bin/bash
      - -c
      - |
        set -e
        if [[ ! -z "$${REWARD_RECIPIENT}" ]]; then
          export REWARD_RECIPIENT_CONF="block_reward_recipient = \"$$REWARD_RECIPIENT\""
        fi
        mkdir -p /chainstate/stacks-blockchain-data
        if [ -z "$$(ls -A /chainstate/stacks-blockchain-data)" ]; then
          tar -xf /init-data/stacks-blockchain-data.tar.gz -C /chainstate/stacks-blockchain-data
        fi
        envsubst < config.toml.in > config.toml
        bitcoin-cli -rpcwait -rpcconnect=bitcoind getmininginfo
        exec stacks-node start --config=config.toml

  postgres:
    image: "postgres:14"
    ports:
      - "5490:5490"
    volumes:
      - chainstate:/chainstate
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: stacks_blockchain_api
      PGPORT: 5490
      PGDATA: /chainstate/pg-data

  stacks-api:
    build:
      context: .
      dockerfile: Dockerfile.stacks-api
      args:
        GIT_COMMIT: e34fab5e5d92222433b19021c584da903b64f27a
    depends_on:
      - postgres
    ports:
      - "3999:3999"
    expose:
      - "3700"
    environment:
      NODE_ENVIRONMENT: production
      STACKS_API_LOG_LEVEL: debug
      STACKS_CHAIN_ID: "0x80000000"
      STACKS_BLOCKCHAIN_API_HOST: "0.0.0.0"
      STACKS_BLOCKCHAIN_API_PORT: 3999
      STACKS_CORE_EVENT_HOST: "0.0.0.0"
      STACKS_CORE_EVENT_PORT: 3700
      PG_HOST: postgres
      PG_PORT: 5490
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_DATABASE: stacks_blockchain_api
      PG_SCHEMA: public
      STACKS_CORE_RPC_HOST: stacks-node
      STACKS_CORE_RPC_PORT: 20443
      BTC_RPC_HOST: http://bitcoind
      BTC_RPC_PORT: 18443
      BTC_RPC_USER: btc
      BTC_RPC_PW: btc
      BTC_FAUCET_PK: *MINER_SEED

volumes:
  pgdata:
  chainstate:
